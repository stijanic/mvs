ASMWTOA1 CSECT
***********************************************************************
*             ASMWTOA1.MLC - This is an HLASM Program                 *
*                 Provided by SimoTime Technologies                   *
*           (C) Copyright 1987-2016 All Rights Reserved               *
*              Web Site URL:   http://www.simotime.com                *
*                    e-mail:   helpdesk@simotime.com                  *
***********************************************************************
*                                                                     *
* Created: 1993/06/01, Simmons                                        *
* Changed: 1993/06/01, Simmons, no changes to date...                 *
*                                                                     *
***********************************************************************
*                                                                     *
* This program will run an an IBM Mainframe using MVS or a PC using   *
* Micro Focus Mainframe Express, version 2.5 or later (MFE) with      *
* the Assembler Option.                                               *
*                                                                     *
* This program provides a sample of some of the coding techniques     *
* used by assembler programmers. You can immediately see the results  *
* of each instruction execution. This is a very effective way to      *
* become familiar with how these techniques work.                     *
*                                                                     *
* The purpose of this program is to test the various forms of the     *
* WTO (Write-To-Operator) macro.                                      *
*                                                                     *
***********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
***********************************************************************
         SAVE  (14,12)
         BALR  12,0
         USING *,12
*
***********************************************************************
* WTO to display the copyright information
*
         WTO   '* ASMWTOA1 An Example of using the WTO macro'
         WTO   '* v03.01.24'
         WTO   '* http://www.simotime.com'
         LTR   R15,R15     IS REG-15 = ZERO...
         BNZ   ABEND4         IF NOT, ABEND...
*
         WTO   '* ASMWTOA1 Copyright 1987-2016'
         WTO   '* SimoTime Enterprises'
         WTO   '* All Rights Reserved'
         LTR   R15,R15     IS REG-15 = ZERO...
         BNZ   ABEND4         IF NOT, ABEND...
***********************************************************************
* WTO with text as a literal enclosed in single quotes
*
         WTO   '* ASMWTOA1 is STARTING, Hello Mainframe World...'
         LTR   R15,R15     IS REG-15 = ZERO...
         BNZ   ABEND4         IF NOT, ABEND...
*
         WTO   '* ASMWTOA1 Message Text, No Label...'
         LTR   R15,R15     IS REG-15 = ZERO...
         BNZ   ABEND4         IF NOT, ABEND...
*
WTOLABEL WTO   '* ASMWTOA1 Message Text, with Label...'
         LTR   R15,R15     IS REG-15 = ZERO...
         BNZ   ABEND4         IF NOT, ABEND...
*
*
***********************************************************************
* WTO using the EXECUTE format, WTO buffer created by the LIST format.
* The 1st WTO uses a label name, the 2nd WTO uses register notation.
*
         WTO   MF=(E,LISTMSG1)
         LTR   R15,R15     IS REG-15 = ZERO...
         BNZ   ABEND4         IF NOT, ABEND...
*
         LA    R8,LISTMSG2
         WTO   MF=(E,(R8))
         LTR   R15,R15     IS REG-15 = ZERO...
         BNZ   ABEND4         IF NOT, ABEND...
*
*
***********************************************************************
* WTO using the EXECUTE format with user-coded WTO buffer. This
* routine illustrates the use of a single WTO to display different
* messages.
*
         BAL   R3,DOMSG              DISPLAY MESSAGE, RETURN VIA R3
         MVC   WTOTEXT(76),WTOMSG1
         BAL   R3,DOMSG              DISPLAY MESSAGE, RETURN VIA R3
         MVC   WTOTEXT(76),WTOMSG2
         BAL   R3,DOMSG              DISPLAY MESSAGE, RETURN VIA R3
*
*
***********************************************************************
* WTO using the EXECUTE format with user-coded WTO buffer. This
* routine illustrates the use of a single WTO to display different
* messages. This will cause a length error with WTO execution.
*
         WTO   MF=(E,WTOCRASH)
         LTR   R15,R15     IS REG-15 = ZERO...
         BZ    ABEND4         THEN ABEND, SHOULD BE 4...
         B     EOJ
*
*
***********************************************************************
* Common WTO routine to display WTOBLOCK...
*
DOMSG    EQU   *
         WTO   MF=(E,WTOBLOCK)
         LTR   R15,R15     IS REG-15 = ZERO...
         BNZ   ABEND4         IF NOT, ABEND...
         BR    R3          Return via Register 3
***********************************************************************
* Return to caller
*
EOJ      EQU   *
         WTO   '* ASMWTOA1 is FINISHED...'
         RETURN (14,12),RC=0
***********************************************************************
* Abnormal termination of program
*
ABEND4   EQU   *
         WTO   '* ASMWTOA1 MLC, is ABENDING, RC=4...'
         RETURN (14,12),RC=4
*
***********************************************************************
* WTO using the LIST function. The WTO buffer created by the LIST
* format may be used with a WTO using the EXECUTE format.
*
WTOLIST  EQU   *
LISTMSG1 WTO   '* ASMWTOA1 List Message One from WTOLIST...',MF=L
LISTMSG2 WTO   '* ASMWTOA1 List Message Two from WTOLIST...',MF=L
*
*
***********************************************************************
* The following is an example of a user-coded WTO buffer.
*
         DS    0H            * INSURE HALF-WORD ALIGNMENT
WTOBLOCK EQU   *
         DC    H'80'         * For WTO, length of WTO buffer...
         DC    H'0'                     should be binary zeroes...
WTOTEXT  DC    CL76'* ASMWTOA1 WTO with user-coded buffer...'
*
WTOMSG1  DC    CL76'* ASMWTOA1 User message number one...'
WTOMSG2  DC    CL76'* ASMWTOA1 User message number two...'
*
*
***********************************************************************
* The following is an example of a user-coded WTO buffer that will
* cause an error conditions, length of text exceeds 251 bytes.
         DS    0H            * INSURE HALF-WORD ALIGNMENT
WTOCRASH EQU   *
         DC    H'512'        * For WTO, length of WTO buffer...
         DC    H'0'                     should be binary zeroes...
WTOCTEXT DC    CL76'* ASMWTOA1 WTO FOR CRASH TEST...'
*
         DC    436CL1'X'
*
         END
